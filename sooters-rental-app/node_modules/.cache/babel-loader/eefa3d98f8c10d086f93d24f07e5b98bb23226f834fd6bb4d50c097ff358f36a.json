{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { defineStore } from \"pinia\";\nimport axios from \"axios\";\nexport const useAuthStore = defineStore(\"auth\", {\n  state: () => ({\n    authUser: null,\n    authErrors: [],\n    authStatus: null\n  }),\n  getters: {\n    user: state => state.authUser,\n    errors: state => state.authErrors,\n    status: state => state.authStatus\n  },\n  actions: {\n    async getToken() {\n      await axios.get(\"/sanctum/csrf-cookie\");\n    },\n    async getUser() {\n      await this.getToken();\n      const data = await axios.get(\"/api/user\");\n      this.authUser = data.data;\n    },\n    async handleLogin(data) {\n      this.authErrors = [];\n      await this.getToken();\n      try {\n        await axios.post(\"/login\", {\n          email: data.email,\n          password: data.password\n        });\n        this.router.push(\"/\");\n      } catch (error) {\n        if (error.response.status === 422) {\n          this.authErrors = error.response.data.errors;\n        }\n      }\n    },\n    async handleRegister(data) {\n      this.authErrors = [];\n      await this.getToken();\n      try {\n        await axios.post(\"/register\", {\n          name: data.name,\n          email: data.email,\n          password: data.password,\n          password_confirmation: data.password_confirmation\n        });\n        this.router.push(\"/\");\n      } catch (error) {\n        if (error.response.status === 422) {\n          this.authErrors = error.response.data.errors;\n        }\n      }\n    },\n    async handleLogout() {\n      await axios.post(\"/logout\");\n      this.authUser = null;\n    },\n    async handleForgotPassword(email) {\n      this.authErrors = [];\n      this.getToken();\n      try {\n        const response = await axios.post(\"/forgot-password\", {\n          email: email\n        });\n        this.authStatus = response.data.status;\n      } catch (error) {\n        if (error.response.status === 422) {\n          this.authErrors = error.response.data.errors;\n        }\n      }\n    },\n    async handleResetPassword(resetData) {\n      this.authErrors = [];\n      try {\n        const response = await axios.post(\"/reset-password\", resetData);\n        this.authStatus = response.data.status;\n      } catch (error) {\n        if (error.response.status === 422) {\n          this.authErrors = error.response.data.errors;\n        }\n      }\n    }\n  }\n});","map":{"version":3,"names":["defineStore","axios","useAuthStore","state","authUser","authErrors","authStatus","getters","user","errors","status","actions","getToken","get","getUser","data","handleLogin","post","email","password","router","push","error","response","handleRegister","name","password_confirmation","handleLogout","handleForgotPassword","handleResetPassword","resetData"],"sources":["/Users/mimi/Desktop/MEVN_FS/ScooterRentalApp/sooters-rental-app/src/stores/auth.js"],"sourcesContent":["import { defineStore } from \"pinia\";\nimport axios from \"axios\";\n\nexport const useAuthStore = defineStore(\"auth\", {\n  state: () => ({\n    authUser: null,\n    authErrors: [],\n    authStatus: null,\n  }),\n  getters: {\n    user: (state) => state.authUser,\n    errors: (state) => state.authErrors,\n    status: (state) => state.authStatus,\n  },\n  actions: {\n    async getToken() {\n      await axios.get(\"/sanctum/csrf-cookie\");\n    },\n    async getUser() {\n      await this.getToken();\n      const data = await axios.get(\"/api/user\");\n      this.authUser = data.data;\n    },\n    async handleLogin(data) {\n      this.authErrors = [];\n      await this.getToken();\n\n      try {\n        await axios.post(\"/login\", {\n          email: data.email,\n          password: data.password,\n        });\n        this.router.push(\"/\");\n      } catch (error) {\n        if (error.response.status === 422) {\n          this.authErrors = error.response.data.errors;\n        }\n      }\n    },\n    async handleRegister(data) {\n      this.authErrors = [];\n      await this.getToken();\n      try {\n        await axios.post(\"/register\", {\n          name: data.name,\n          email: data.email,\n          password: data.password,\n          password_confirmation: data.password_confirmation,\n        });\n        this.router.push(\"/\");\n      } catch (error) {\n        if (error.response.status === 422) {\n          this.authErrors = error.response.data.errors;\n        }\n      }\n    },\n    async handleLogout() {\n      await axios.post(\"/logout\");\n      this.authUser = null;\n    },\n    async handleForgotPassword(email) {\n      this.authErrors = [];\n      this.getToken();\n      try {\n        const response = await axios.post(\"/forgot-password\", {\n          email: email,\n        });\n        this.authStatus = response.data.status;\n      } catch (error) {\n        if (error.response.status === 422) {\n          this.authErrors = error.response.data.errors;\n        }\n      }\n    },\n    async handleResetPassword(resetData) {\n      this.authErrors = [];\n      try {\n        const response = await axios.post(\"/reset-password\", resetData);\n        this.authStatus = response.data.status;\n      } catch (error) {\n        if (error.response.status === 422) {\n          this.authErrors = error.response.data.errors;\n        }\n      }\n    },\n  },\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}